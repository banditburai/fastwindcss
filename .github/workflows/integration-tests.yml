name: Integration Tests

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        node-version: [20]
        runner:
          - name: Windows
            os: windows-latest

          - name: Linux GNU
            os: ubuntu-latest
            container:
              image: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian

          - name: macOS
            os: macos-14

        integration:
          - cli
          - postcss

    runs-on: ${{ matrix.runner.os }}
    container: ${{ matrix.runner.container }}
    timeout-minutes: 30

    name: ${{ matrix.runner.name }} / ${{ matrix.integration }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}        
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      # Cargo already skips downloading dependencies if they already exist
      - name: Cache cargo        
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Cache the `oxide` Rust build
      - name: Cache oxide build        
        uses: actions/cache@v4
        with:
          path: |
            ./target/
            ./crates/node/*.node
            ./crates/node/index.js
            ./crates/node/index.d.ts
          key: ${{ runner.os }}-oxide-${{ hashFiles('./crates/**/*') }}

      - name: Install dependencies (Windows & macOS & Linux GNU)        
        run: pnpm install
                  
      # Setup plugins before building
      - name: Setup TailwindCSS plugins        
        run: pnpm run setup-plugins
        working-directory: packages/@tailwindcss-standalone

      - name: Build        
        run: pnpm run build
        env:
          CARGO_PROFILE_RELEASE_LTO: 'off'
          CARGO_TARGET_X86_64_PC_WINDOWS_MSVC_LINKER: 'lld-link'

      - name: Test ${{ matrix.integration }}         
        run: pnpm run test:integrations ./integrations/${{ matrix.integration }}
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          CONTAINER_NAME: ${{ matrix.runner.container.image }}
          RUNNER_NAME: ${{ matrix.runner.name }}
